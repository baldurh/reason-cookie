// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/src/jest.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Cookie$JustgageReasonCookie = require("../src/Cookie.bs.js");

describe("Cookie", (function () {
        Jest.test(".setString can set a cookie", (function () {
                Cookie$JustgageReasonCookie.setString("hello", "test");
                var __x = Cookie$JustgageReasonCookie.getAsString("hello");
                return Jest.Expect[/* toBe */2]("test", Jest.Expect[/* expect */0](Belt_Option.getWithDefault(__x, "")));
              }));
        Jest.test(".remove can remove a cookie", (function () {
                Cookie$JustgageReasonCookie.setString("hello", "test");
                Cookie$JustgageReasonCookie.remove("hello");
                return Jest.Expect[/* toBe */2](/* None */0, Jest.Expect[/* expect */0](Cookie$JustgageReasonCookie.getAsString("hello")));
              }));
        Jest.test(".getAsJson can get some Json", (function () {
                Cookie$JustgageReasonCookie.setString("hello", "{\"a\": 2}");
                var obj = { };
                obj["a"] = 2;
                return Jest.Expect[/* toEqual */12](/* Some */[obj], Jest.Expect[/* expect */0](Cookie$JustgageReasonCookie.getAsJson("hello")));
              }));
        Jest.test(".getAsJson can get stuff stored by setJson", (function () {
                var obj = { };
                obj["a"] = 2;
                Cookie$JustgageReasonCookie.setJson("hello", obj);
                return Jest.Expect[/* toEqual */12](/* Some */[obj], Jest.Expect[/* expect */0](Cookie$JustgageReasonCookie.getAsJson("hello")));
              }));
        Jest.test(".getAsJson can get stuff stored by setJson", (function () {
                var obj = { };
                obj["a"] = 2;
                Cookie$JustgageReasonCookie.setJsonConfig("hello", obj, Cookie$JustgageReasonCookie.makeConfig(/* Some */[2], /* Some */[""], /* () */0));
                return Jest.Expect[/* toEqual */12](/* Some */[obj], Jest.Expect[/* expect */0](Cookie$JustgageReasonCookie.getAsJson("hello")));
              }));
        return Jest.test(".getAsJson will return None", (function () {
                      Cookie$JustgageReasonCookie.remove("hello");
                      return Jest.Expect[/* toEqual */12](/* None */0, Jest.Expect[/* expect */0](Cookie$JustgageReasonCookie.getAsJson("hello")));
                    }));
      }));

/*  Not a pure module */
